name: Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write

jobs:
  build-linux-windows:
    name: Cross-compile ${{ matrix.goos }}-${{ matrix.goarch }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        goos: [linux, windows]
        goarch: [amd64, arm64]
        exclude:
          - goos: windows
            goarch: arm64

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-go@v5
        with:
          go-version: '1.24'

      - name: Build binary and archive
        run: |
          NAME="lazyhetzner"
          EXT=""
          if [ "${{ matrix.goos }}" = "windows" ]; then EXT=".exe"; fi

          BIN_NAME="${NAME}${EXT}"
          OUTPUT_DIR="${NAME}-${{ matrix.goos }}-${{ matrix.goarch }}"
          mkdir -p "$OUTPUT_DIR"

          CGO_ENABLED=0 GOOS=${{ matrix.goos }} GOARCH=${{ matrix.goarch }} \
          go build -ldflags "-X main.version=${{ github.ref_name }} -X main.commit=${{ github.sha }} -X main.date=$(date -u +%Y-%m-%dT%H:%M:%SZ)" \
          -o "$OUTPUT_DIR/$BIN_NAME" .

          cp LICENSE README.md "$OUTPUT_DIR/"
          tar -czvf "${OUTPUT_DIR}.tar.gz" "$OUTPUT_DIR"

      - uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.goos }}-${{ matrix.goarch }}
          path: "*.tar.gz"

  build-darwin:
    name: Build Darwin ${{ matrix.goarch }}
    runs-on: macos-latest
    strategy:
      matrix:
        goarch: [amd64, arm64]

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-go@v5
        with:
          go-version: '1.24'

      - name: Build binary and archive
        run: |
          NAME="lazyhetzner"
          BIN_NAME="${NAME}"
          OUTPUT_DIR="${NAME}-darwin-${{ matrix.goarch }}"
          mkdir -p "$OUTPUT_DIR"

          GOOS=darwin GOARCH=${{ matrix.goarch }} \
          go build -ldflags "-X main.version=${{ github.ref_name }} -X main.commit=${{ github.sha }} -X main.date=$(date -u +%Y-%m-%dT%H:%M:%SZ)" \
          -o "$OUTPUT_DIR/$BIN_NAME" .

          cp LICENSE README.md "$OUTPUT_DIR/"
          tar -czvf "${OUTPUT_DIR}.tar.gz" "$OUTPUT_DIR"

      - uses: actions/upload-artifact@v4
        with:
          name: darwin-${{ matrix.goarch }}
          path: "*.tar.gz"

  release:
    name: Release
    needs: [build-linux-windows, build-darwin]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v4
        with:
          path: dist

      - name: Generate SHA256 checksums
        run: |
          cd dist
          find . -name '*.tar.gz' -exec sha256sum {} \; > SHA256SUMS

      - uses: softprops/action-gh-release@v2
        with:
          fail_on_unmatched_files: false
          overwrite: true
          files: |
            dist/**/*.tar.gz
            dist/SHA256SUMS
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

